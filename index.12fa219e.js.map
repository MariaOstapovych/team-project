{"mappings":"oeAAAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,S,sBCAAC,EAAAD,EAAA,a,0BAGA,MAAME,EAAcC,SAASC,cAAc,gBACrCC,EAAWF,SAASC,cAAc,iBAClCE,EAAYH,SAASC,cAAc,kBACnCG,EAAYJ,SAASC,cAAc,qBACnCI,EAAkBL,SAASC,cAAc,0BAyBxC,SAASK,EAAeC,GAC7B,OAAOA,EACJC,KACC,EAACC,IACCA,EAAGC,WACHA,EAAUC,MACVA,EAAKC,OACLA,KACI,gDAAgDH,6IAGtCC,0BAAmCD,+RAOXE,2HAGEC,gGAM3CC,KAAK,G,CAlDVd,EAAYe,iBAAiB,SAE7B,SAAiBC,GACf,MAAMC,EAAeD,EAAIE,OAAOC,UAChCC,EAAAC,OAAOC,OACPC,EAAAC,QACGC,IACC,+DAA+DR,KAEhES,MAAK,SAAUC,GACdtB,EAAUuB,UAAY,GACtBzB,EAASyB,UAAYrB,EAAeoB,EAASE,MAE7CT,EAAAC,OAAOS,M,IAERC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,E,IAEhB5B,EAAU+B,YAAclB,EACxBX,EAAgB8B,MAAMC,WAAa,SACnC/B,EAAgB8B,MAAME,SAAW,U,IAiCDC,WAChC,IACE,MAAMC,QAAuB,EAAAzC,EAAA0C,qBAC7BD,EAAeE,MAAK,CAACC,EAAGC,IAAMD,EAAEE,UAAUC,cAAcF,EAAEC,aAE1D,MAAME,EAAwBP,EAC3B/B,KACCuC,GACE,uFAEIA,EAASH,kDAIhB/B,KAAK,IACRd,EAAYiD,mBAAmB,YAAaF,E,CAC5C,MAAOf,GACPC,QAAQC,IAAIF,E,GAGhBkB,GD7EA,MAAMC,EAAWlD,SAASC,cAAc,iBAClCkD,EAAYnD,SAASC,cAAc,sBACzB,EAAAH,EAAAsD,eAER3B,MAAKG,GACb,SAAoByB,GAClB,IAAIC,EAAS,GACbD,EAAME,SAAQhD,IACZ,IAAIiD,EAAa,GACJjD,EAAIkD,MAEZF,SAAQG,IACXF,GAAc,2JAE2CE,EAAKhD,oBAAoBgD,EAAK/C,mBAAmB+C,EAAKjD,0JAKjFiD,EAAK/C,iDACJ+C,EAAK9C,yBAC9B,IAER0C,GAAU,kGAEoC/C,EAAIqC,yDACbY,uFACqCjD,EAAIqC,2CACtE,IAEVO,EAAUH,mBAAmB,aAAcM,GAM3C,SAASK,EAAYC,GACnBA,EAAEC,kBACc,EAAA/D,EAAAsD,eAER3B,MAAKG,IACXI,QAAQC,IAAIL,GAEZuB,EAAUxB,UAAY2B,CAAM,G,CAVVtD,SAASC,cAAc,sBAC/Ba,iBAAiB,QAAS6C,GAgBxC,SAASG,EAAUF,GACjB,GAA0B,WAAtBA,EAAE3C,OAAO8C,SACX,OAEF,MAAMhB,EAAWa,EAAE3C,OAAO+C,aAAa,kBACvC,EAAAlE,EAAAmE,kBAAiBlB,GAAUtB,MAAKG,IAC9BuB,EAAUxB,UAAY,GACtBuB,EAASvB,UAAYrB,EAAesB,EAAK,G,CAV1B5B,SAASC,cAAc,qBAC/Ba,iBAAiB,QAASgD,E,CA5ClBI,CAAWtC,K,sBEThC,MAAMuC,EAAWnE,SAASC,cAAc,cAExCmE,OAAOtD,iBAAiB,UAUxB,WAEId,SAASqE,KAAKC,UAAY,KAC1BtE,SAASuE,gBAAgBD,UAAY,IAErCH,EAAShC,MAAMqC,QAAU,QAEzBL,EAAShC,MAAMqC,QAAU,M,IAhB7BL,EAASrD,iBAAiB,SAE1B,WACEsD,OAAOK,SAAS,CACdC,IAAK,EACLC,SAAU,U","sources":["src/index.js","src/js/home-page.js","src/js/categories.js","src/js/scroll-up.js"],"sourcesContent":["import './js/fond-items'\nimport './js/request'\nimport './js/header'\nimport './js/home-page'\nimport './js/categories'\nimport './js/modal'\nimport './js/donate-bar'\nimport './js/scroll-up'\nimport './js/switch-theme'\n\n","import { getTopBooks } from './request';\nimport { getBooksCategory } from './request';\nimport { loader } from './loader';\nimport { createBookList } from './categories';\nimport './categories';\nconst bookList = document.querySelector('.book-list-js');\nconst bestBooks = document.querySelector('.best-books__list');\nconst promise = getTopBooks();\n\npromise.then(data => createDate(data));\nfunction createDate(categ) {\n  let markup = '';\n  categ.forEach(arr => {\n    let bookMarkup = '';\n    const data = arr.books;\n\n    data.forEach(book => {\n      bookMarkup += `<li class=\"best-books__item is-hidden-books\">\n      <a href=\"\" class=\"best-books__link\">\n          <img class=\"best-books__image\" loading=\"lazy\" src=\"${book.book_image}\" alt=\"${book.title}\" data-id=\"${book._id}\">\n      </a>\n      <div class=\"card-quick\">\n         <p class=\"card-quick-view\">Quick view</p>\n      </div>\n      <p class='best-book__title'>${book.title}</p>\n      <p class='best-book__author'>${book.author}</p>\n      </li>`;\n    });\n    markup += `\n      <li class='best-books-category-wrap'>\n        <p class ='best-books__category__title'>${arr.list_name}</p>\n        <ul class='best-book-category'>${bookMarkup}</ul>\n        <button  class='best-books-morebutton' type=\"button\" data-category=\"${arr.list_name}\">see more</button>\n      </li>`;\n  });\n  bestBooks.insertAdjacentHTML('afterbegin', markup);\n  // bestBooks.innerHTML = markup;\n\n  const bestButtonAll = document.querySelector('.category__linkAll');\n  bestButtonAll.addEventListener('click', onButtonAll);\n\n  function onButtonAll(e) {\n    e.preventDefault();\n    const promise = getTopBooks();\n\n    promise.then(data => {\n      console.log(data);\n\n      bestBooks.innerHTML = markup;\n    });\n  }\n\n  const bestButton = document.querySelector('.best-books__list');\n  bestButton.addEventListener('click', onSeeMore);\n\n  function onSeeMore(e) {\n    if (e.target.nodeName !== 'BUTTON') {\n      return;\n    }\n    const category = e.target.getAttribute('data-category');\n    getBooksCategory(category).then(data => {\n      bestBooks.innerHTML = '';\n      bookList.innerHTML = createBookList(data);\n    });\n  }\n}\n","import { getCategoriesList } from './request';\nimport axios from 'axios';\nimport { loader } from './loader';\nconst listElement = document.querySelector('.cat-list-js');\nconst bookList = document.querySelector('.book-list-js');\nconst bookTitle = document.querySelector('.book-title-js');\nconst bestBooks = document.querySelector('.best-books__list');\nconst mainTitleHidden = document.querySelector('.best-books__maintitle');\n\nlistElement.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  const categoryName = evt.target.outerText;\n  loader.show();\n  axios\n    .get(\n      `https://books-backend.p.goit.global/books/category?category=${categoryName}`\n    )\n    .then(function (response) {\n      bestBooks.innerHTML = '';\n      bookList.innerHTML = createBookList(response.data);\n\n      loader.hide();\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  bookTitle.textContent = categoryName;\n  mainTitleHidden.style.visibility = 'hidden';\n  mainTitleHidden.style.position = 'absolute';\n}\n\nexport function createBookList(arr) {\n  return arr\n    .map(\n      ({\n        _id,\n        book_image,\n        title,\n        author,\n      }) => `<li class=\"category-book-item\" data-book-id=\"${_id}\">\n       <button class=\"category__link\" type='button' data-category>\n       <a href=\"\" class=\"best-books__link\">\n          <img src=\"${book_image}\" alt=\"book\" data-id=\"${_id}\" class=\"category-book-img best-books__image\">\n        </a>\n        <div class=\"card-quick\">\n         <p class=\"card-quick-view\">Quick view</p>\n      </div>\n            <div class=\"textbox\">\n                <div class=\"titlebox\">  \n                  <p class=\"titlebox-title\">${title}</p>\n                </div>\n                <div class=\"authorbox\">  \n                  <p class=\"authorbox-author\">${author}</p>\n                </div>\n            </div>          \n        </button>\n      </li>`\n    )\n    .join('');\n}\n\nexport const createCategoryList = async () => {\n  try {\n    const categoriesList = await getCategoriesList();\n    categoriesList.sort((a, b) => a.list_name.localeCompare(b.list_name));\n\n    const buttonsCategoriesList = categoriesList\n      .map(\n        category =>\n          `<li class=\"category__item\">\n          <button class=\"category__link\">\n            ${category.list_name}\n          </button>\n        </li>`\n      )\n      .join('');\n    listElement.insertAdjacentHTML('beforeend', buttonsCategoriesList);\n  } catch (error) {\n    console.log(error);\n  }\n};\ncreateCategoryList();\n","const scrollUp = document.querySelector('.scroll-up');\n\nwindow.addEventListener('scroll', onScrollWheel);\nscrollUp.addEventListener('click', onScrollClick);\n\nfunction onScrollClick() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onScrollWheel() {\n  if (\n    document.body.scrollTop > 500 ||\n    document.documentElement.scrollTop > 500\n  ) {\n    scrollUp.style.display = 'block';\n  } else {\n    scrollUp.style.display = 'none';\n  }\n}\n"],"names":["parcelRequire","$e5MbR","$f3b06000f9b46fbb$var$listElement","document","querySelector","$f3b06000f9b46fbb$var$bookList","$f3b06000f9b46fbb$var$bookTitle","$f3b06000f9b46fbb$var$bestBooks","$f3b06000f9b46fbb$var$mainTitleHidden","$f3b06000f9b46fbb$export$96f341d14ca64895","arr","map","_id","book_image","title","author","join","addEventListener","evt","categoryName","target","outerText","$gjiCh","loader","show","$2shzp","default","get","then","response","innerHTML","data","hide","catch","error","console","log","textContent","style","visibility","position","async","categoriesList","getCategoriesList","sort","a","b","list_name","localeCompare","buttonsCategoriesList","category","insertAdjacentHTML","$f3b06000f9b46fbb$export$7b0178aacb0b75f6","$9bfb79a853d4dcfb$var$bookList","$9bfb79a853d4dcfb$var$bestBooks","getTopBooks","categ","markup","forEach","bookMarkup","books","book","onButtonAll","e","preventDefault","onSeeMore","nodeName","getAttribute","getBooksCategory","$9bfb79a853d4dcfb$var$createDate","$52650fc44c8b8200$var$scrollUp","window","body","scrollTop","documentElement","display","scrollTo","top","behavior"],"version":3,"file":"index.12fa219e.js.map"}