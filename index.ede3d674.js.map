{"mappings":"oeAAAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,S,aAIA,MAAME,EAAYC,SAASC,cAAc,qBACnCC,EAAaF,SAASC,cAAc,uBAE1B,EAAAH,EAAAK,eAGRC,MAAKC,GAEb,SAAoBC,GAClB,IAAIC,EAAS,GAEbD,EAAME,SAAQC,IACZ,IAAIC,EAAa,GACJD,EAAIE,MACZH,SAAQI,IACXF,GAAc,2JAE2CE,EAAKC,oBAAoBD,EAAKE,mBAAmBF,EAAKG,0JAKjFH,EAAKE,iDACJF,EAAKI,yBAC9B,IAERT,GAAU,kGAEoCE,EAAIQ,yDACbP,uFACqCD,EAAIQ,2CACtE,IAEVC,EAAAC,OAAOC,OACPrB,EAAUsB,mBAAmB,aAAcd,GAC3CL,EAAWoB,UAAUC,IAAI,oB,CA7BNC,CAAWnB,KAChCa,EAAAC,OAAOM,OCXP3B,EAAAD,EAAA,a,0BAIA,MAAM6B,EAAc1B,SAASC,cAAc,gBACrC0B,EAAW3B,SAASC,cAAc,iBAClC2B,EAAY5B,SAASC,cAAc,kBACnC4B,EAAa7B,SAASC,cAAc,sBACpC6B,EAAW9B,SAASC,cAAc,mBAClC8B,EAAkB/B,SAASC,cAAc,eAE/CyB,EAAYM,iBAAiB,SAE7B,SAAiBC,GACf,MAAMC,EAAeD,EAAIE,OAAOC,UAChCC,QAAQC,IAAIJ,GACdhB,EAAAC,OAAOM,OACLc,EAAAC,QACGC,IACC,+DAA+DP,KAEhE9B,MAAK,SAAUsC,GACDA,EAASrC,KAAKsC,KACzB,EAAC5B,IAAEA,EAAGF,WAAEA,EAAUC,MAAEA,EAAKE,OAAEA,EAAMC,UAAEA,KAAgBoB,QAAQC,IAAII,KAEjEf,EAASiB,UAA2BF,EAASrC,KAe9CsC,KACC,EAAC5B,IACCA,EAAGF,WACHA,EAAUC,MACVA,EAAKE,OACLA,KACI,gDAAgDD,6IAGtCF,0BAAmCE,+RAOXD,2HAGEE,gGAM3C6B,KAAK,IAvCJ3B,EAAAC,OAAOC,M,IAER0B,OAAM,SAAUC,GACfV,QAAQC,IAAIS,E,IAGhBlB,EAAWP,UAAU0B,OAAO,qBAC5BlB,EAASR,UAAUC,IAAI,qBACvBK,EAAUqB,YAAcf,EACxBH,EAAgBmB,MAAMC,QAAU,M,IAiCPC,WACzB,IACE,MAAMC,QAAuB,EAAAvD,EAAAwD,qBAC7BD,EAAeE,MAAK,CAACC,EAAGC,IAAMD,EAAEvC,UAAUyC,cAAcD,EAAExC,aAE1D,MAAM0C,EAAwBN,EAC3BV,KACCiB,GACE,uFAEIA,EAAS3C,kDAIhB4B,KAAK,IACRnB,EAAYL,mBAAmB,YAAasC,E,CAC5C,MAAOZ,GACPV,QAAQC,IAAIS,E,GAGhBc,G,sBCxFA,MAAMC,EAAW9D,SAASC,cAAc,cAExC8D,OAAO/B,iBAAiB,UAUxB,WAEIhC,SAASgE,KAAKC,UAAY,KAC1BjE,SAASkE,gBAAgBD,UAAY,IAErCH,EAASZ,MAAMC,QAAU,QAEzBW,EAASZ,MAAMC,QAAU,M,IAhB7BW,EAAS9B,iBAAiB,SAE1B,WACE+B,OAAOI,SAAS,CACdC,IAAK,EACLC,SAAU,U","sources":["src/index.js","src/js/home-page.js","src/js/categories.js","src/js/scroll-up.js"],"sourcesContent":["import './js/fond-items'\nimport './js/request'\nimport './js/header'\nimport './js/home-page'\nimport './js/categories'\nimport './js/modal'\nimport './js/donate-bar'\nimport './js/scroll-up'\nimport './js/switch-theme'\n\n","import { getTopBooks } from './request';\nimport { loader } from './loader'\n\n\nconst bestBooks = document.querySelector('.best-books__list');\nconst bestButton = document.querySelector('.category__linkAll');\n\nconst promise = getTopBooks();\n// const categories = getCategoriesList();\n\npromise.then(data => createDate(data));\nloader.show(); \nfunction createDate(categ) {\n  let markup = '';\n\n  categ.forEach(arr => {\n    let bookMarkup = '';\n    const data = arr.books;\n    data.forEach(book => {\n      bookMarkup += `<li class=\"best-books__item is-hidden-books\">\n      <a href=\"\" class=\"best-books__link\">\n          <img class=\"best-books__image\" loading=\"lazy\" src=\"${book.book_image}\" alt=\"${book.title}\" data-id=\"${book._id}\">\n      </a>\n      <div class=\"card-quick\">\n         <p class=\"card-quick-view\">Quick view</p>\n      </div>\n      <p class='best-book__title'>${book.title}</p>\n      <p class='best-book__author'>${book.author}</p>\n      </li>`;\n    });\n    markup += `\n      <li class='best-books-category-wrap'>\n        <p class ='best-books__category__title'>${arr.list_name}</p>\n        <ul class='best-book-category'>${bookMarkup}</ul>\n        <button  class='best-books-morebutton' type=\"button\" data-category=\"${arr.list_name}\">see more</button>\n      </li>`;\n  });\n  loader.hide(); \n  bestBooks.insertAdjacentHTML('afterbegin', markup);\n  bestButton.classList.add('category-selected');\n}\n","import { getCategoriesList } from './request';\nimport axios from 'axios';\n// import { getBooksCategory } from \"./request\";\nimport { loader } from './loader'\nconst listElement = document.querySelector('.cat-list-js');\nconst bookList = document.querySelector('.book-list-js');\nconst bookTitle = document.querySelector('.book-title-js');\nconst bestButton = document.querySelector('.category__linkAll');\nconst listItem = document.querySelector('.category__link');\nconst bestBooksHidden = document.querySelector('.best-books');\n\nlistElement.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  const categoryName = evt.target.outerText;\n  console.log(categoryName);\nloader.show(); \n  axios\n    .get(\n      `https://books-backend.p.goit.global/books/category?category=${categoryName}`\n    )\n    .then(function (response) {\n      const book = response.data.map(\n        ({ _id, book_image, title, author, list_name }) => console.log(response)\n      );\n      bookList.innerHTML = createBookList(response.data);\n      loader.hide(); \n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  bestButton.classList.remove('category-selected');\n  listItem.classList.add('category-selected');\n  bookTitle.textContent = categoryName;\n  bestBooksHidden.style.display = 'none';\n}\n\nfunction createBookList(arr) {\n  return arr\n    .map(\n      ({\n        _id,\n        book_image,\n        title,\n        author,\n      }) => `<li class=\"category-book-item\" data-book-id=\"${_id}\">\n       <button class=\"category__link\" type='button' data-category>\n       <a href=\"\" class=\"best-books__link\">\n          <img src=\"${book_image}\" alt=\"book\" data-id=\"${_id}\" class=\"category-book-img best-books__image\">\n        </a>\n        <div class=\"card-quick\">\n         <p class=\"card-quick-view\">Quick view</p>\n      </div>\n            <div class=\"textbox\">\n                <div class=\"titlebox\">  \n                  <p class=\"titlebox-title\">${title}</p>\n                </div>\n                <div class=\"authorbox\">  \n                  <p class=\"authorbox-author\">${author}</p>\n                </div>\n            </div>          \n        </button>\n      </li>`\n    )\n    .join('');\n}\n\nconst createCategoryList = async () => {\n  try {\n    const categoriesList = await getCategoriesList();\n    categoriesList.sort((a, b) => a.list_name.localeCompare(b.list_name));\n\n    const buttonsCategoriesList = categoriesList\n      .map(\n        category =>\n          `<li class=\"category__item\">\n          <button class=\"category__link\">\n            ${category.list_name}\n          </button>\n        </li>`\n      )\n      .join('');\n    listElement.insertAdjacentHTML('beforeend', buttonsCategoriesList);\n  } catch (error) {\n    console.log(error);\n  }\n};\ncreateCategoryList();\n","const scrollUp = document.querySelector('.scroll-up');\n\nwindow.addEventListener('scroll', onScrollWheel);\nscrollUp.addEventListener('click', onScrollClick);\n\nfunction onScrollClick() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onScrollWheel() {\n  if (\n    document.body.scrollTop > 500 ||\n    document.documentElement.scrollTop > 500\n  ) {\n    scrollUp.style.display = 'block';\n  } else {\n    scrollUp.style.display = 'none';\n  }\n}\n"],"names":["parcelRequire","$e5MbR","$9bfb79a853d4dcfb$var$bestBooks","document","querySelector","$9bfb79a853d4dcfb$var$bestButton","getTopBooks","then","data","categ","markup","forEach","arr","bookMarkup","books","book","book_image","title","_id","author","list_name","$gjiCh","loader","hide","insertAdjacentHTML","classList","add","$9bfb79a853d4dcfb$var$createDate","show","$f3b06000f9b46fbb$var$listElement","$f3b06000f9b46fbb$var$bookList","$f3b06000f9b46fbb$var$bookTitle","$f3b06000f9b46fbb$var$bestButton","$f3b06000f9b46fbb$var$listItem","$f3b06000f9b46fbb$var$bestBooksHidden","addEventListener","evt","categoryName","target","outerText","console","log","$2shzp","default","get","response","map","innerHTML","join","catch","error","remove","textContent","style","display","async","categoriesList","getCategoriesList","sort","a","b","localeCompare","buttonsCategoriesList","category","$f3b06000f9b46fbb$var$createCategoryList","$52650fc44c8b8200$var$scrollUp","window","body","scrollTop","documentElement","scrollTo","top","behavior"],"version":3,"file":"index.ede3d674.js.map"}