{"mappings":"qhBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sJCAzDH,EAAA,S,sBCCA,IAAAI,EAAAJ,EAAA,S,aAIA,MAAMK,EAAcC,SAASC,cAAc,gBACrCC,EAAWF,SAASC,cAAc,iBAClCE,EAAWH,SAASC,cAAc,mBACxCF,EAAYK,iBAAiB,SAE7B,SAAiBC,GACf,MAAMC,EAAeD,EAAIE,OAAOC,UAEhCC,EAAAC,QACGC,IACC,+DAA+DL,KAEhEM,MAAK,SAAUC,GACDA,EAASC,KAAKC,KAAI,EAACC,IAAEA,EAAGC,WAAEA,EAAUC,MAAEA,EAAKC,OAAEA,KACxDC,QAAQC,IAAIL,EAAKC,EAAYC,EAAOC,KAEtCjB,EAASoB,UAA2BT,EAASC,KAW9CC,KACC,EAACC,IACCA,EAAGC,WACHA,EAAUC,MACVA,EAAKC,OACLA,KACI,gDAAgDH,wEAEtCC,sKAGwBC,2HAGEC,2FAM3CI,KAAK,G,IA7BLC,OAAM,SAAUC,GACfL,QAAQC,IAAII,E,IAGhBtB,EAASuB,UAAUC,IAAI,oB,IA4BEC,WACzB,IACE,MAAMC,QAAuB,EAAA/B,EAAAgC,qBAC7BD,EAAeE,MAAK,CAACC,EAAGC,IAAMD,EAAEE,UAAUC,cAAcF,EAAEC,aAE1D,MAAME,EAAwBP,EAC3Bd,KACCsB,GACE,uFAEIA,EAASH,kDAIhBX,KAAK,IACRxB,EAAYuC,mBAAmB,YAAaF,E,CAC5C,MAAOX,GACPL,QAAQC,IAAII,E,GAGhBc,G,WC3EA,MAAMC,EAAWxC,SAASC,cAAc,cAExCwC,OAAOrC,iBAAiB,UAUxB,WAEIJ,SAAS0C,KAAKC,UAAY,KAC1B3C,SAAS4C,gBAAgBD,UAAY,IAErCH,EAASK,MAAMC,QAAU,QAEzBN,EAASK,MAAMC,QAAU,M,IAhB7BN,EAASpC,iBAAiB,SAE1B,WACEqC,OAAOM,SAAS,CACdC,IAAK,EACLC,SAAU,U,qBCRdC,EAAiB,IAAAC,IAAoBzD,EAAA,SAAA0D,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCG5F,MAAMC,EAAazD,SAASC,cAAc,gBACpCyD,EAAO1D,SAASC,cAAc,QAC9B0D,EAAW3D,SAASC,cAAc,0BAElC2D,EAAYC,aAAaC,QAAQ,gBACnCF,GACAF,EAAKhC,UAAYkC,EACjBH,EAAWM,QAAwB,SAAdH,EACH,SAAdA,GACAD,EAASK,aAAa,OAAQ,GAAGC,EAAAf,sBAGrCQ,EAAKhC,UAAY,QAGrB+B,EAAWrD,iBAAiB,UAAU,WAClC,MAAM8D,EAAeC,KAAKJ,QAAU,OAAS,QAC7CL,EAAKhC,UAAYwC,EAEI,SAAjBA,EACAP,EAASK,aAAa,OAAQ,GAAGC,EAAAf,qBAEjCS,EAASK,aAAa,OAAQ,GAAGC,EAAAf,sBAGrCW,aAAaO,QAAQ,eAAgBF,E","sources":["node_modules/@parcel/runtime-js/lib/runtime-cfe03fb8d169a90e.js","src/index.js","src/js/categories.js","src/js/scroll-up.js","node_modules/@parcel/runtime-js/lib/runtime-44e7bd74d9a8b620.js","src/js/switch-theme.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.0e5a7a7d.js\\\",\\\"8OQ7p\\\":\\\"icons.e7757261.svg\\\",\\\"a8cj2\\\":\\\"shopping-list.84dc229d.js\\\"}\"));","import './js/home-page'\nimport './js/header'\nimport './js/fond-items'\nimport './js/categories'\nimport './js/donate-bar'\nimport './js/scroll-up'\nimport './js/request'\nimport './js/switch-theme'\nimport './js/modal'\n\n\n","// Olga\nimport { getCategoriesList } from './request';\nimport axios from 'axios';\n// import { getBooksCategory } from \"./request\";\n\nconst listElement = document.querySelector('.cat-list-js');\nconst bookList = document.querySelector('.book-list-js');\nconst listItem = document.querySelector('.category__link');\nlistElement.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  const categoryName = evt.target.outerText;\n\n  axios\n    .get(\n      `https://books-backend.p.goit.global/books/category?category=${categoryName}`\n    )\n    .then(function (response) {\n      const book = response.data.map(({ _id, book_image, title, author }) =>\n        console.log(_id, book_image, title, author)\n      );\n      bookList.innerHTML = createBookList(response.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  listItem.classList.add('category-selected');\n}\n\nfunction createBookList(arr) {\n  return arr\n    .map(\n      ({\n        _id,\n        book_image,\n        title,\n        author,\n      }) => `<li class=\"category-book-item\" data-book-id=\"${_id}\">\n       <a class=\"category__link\" href=\"#\">\n          <img src=\"${book_image}\" alt=\"book\" class=\"category-book-img\">\n            <div class=\"textbox\">\n                <div class=\"titlebox\">  \n                  <p class=\"titlebox-title\">${title}</p>\n                </div>\n                <div class=\"authorbox\">  \n                  <p class=\"authorbox-author\">${author}</p>\n                </div>\n            </div>          \n        </a>\n      </li>`\n    )\n    .join('');\n}\n\nconst createCategoryList = async () => {\n  try {\n    const categoriesList = await getCategoriesList();\n    categoriesList.sort((a, b) => a.list_name.localeCompare(b.list_name));\n\n    const buttonsCategoriesList = categoriesList\n      .map(\n        category =>\n          `<li class=\"category__item\">\n          <button class=\"category__link\">\n            ${category.list_name}\n          </button>\n        </li>`\n      )\n      .join('');\n    listElement.insertAdjacentHTML('beforeend', buttonsCategoriesList);\n  } catch (error) {\n    console.log(error);\n  }\n};\ncreateCategoryList();\n","const scrollUp = document.querySelector('.scroll-up');\n\nwindow.addEventListener('scroll', onScrollWheel);\nscrollUp.addEventListener('click', onScrollClick);\n\nfunction onScrollClick() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onScrollWheel() {\n  if (\n    document.body.scrollTop > 500 ||\n    document.documentElement.scrollTop > 500\n  ) {\n    scrollUp.style.display = 'block';\n  } else {\n    scrollUp.style.display = 'none';\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8OQ7p\")).toString();","// Igor\nimport spritePath from '../images/icons.svg';\n\nconst modeSwitch = document.querySelector('.mode-switch');\nconst body = document.querySelector('body');\nconst logoIcon = document.querySelector('.header__logo-icon use');\n\nconst savedMode = localStorage.getItem('selectedMode');\nif (savedMode) {\n    body.classList = savedMode;\n    modeSwitch.checked = savedMode === 'dark' ? true : false;\n    if (savedMode === 'dark') {\n        logoIcon.setAttribute('href', `${spritePath}#icon-logo-dark`);\n    }\n} else {\n    body.classList = 'light';\n}\n\nmodeSwitch.addEventListener('change', function() {\n    const selectedMode = this.checked ? 'dark' : 'light';\n    body.classList = selectedMode;\n\n    if (selectedMode === 'dark') {\n        logoIcon.setAttribute('href', `${spritePath}#icon-logo-dark`);\n    } else {\n        logoIcon.setAttribute('href', `${spritePath}#icon-logo-light`);\n    }\n\n    localStorage.setItem('selectedMode', selectedMode);\n});"],"names":["parcelRequire","register","JSON","parse","$e5MbR","$f3b06000f9b46fbb$var$listElement","document","querySelector","$f3b06000f9b46fbb$var$bookList","$f3b06000f9b46fbb$var$listItem","addEventListener","evt","categoryName","target","outerText","$2shzp","default","get","then","response","data","map","_id","book_image","title","author","console","log","innerHTML","join","catch","error","classList","add","async","categoriesList","getCategoriesList","sort","a","b","list_name","localeCompare","buttonsCategoriesList","category","insertAdjacentHTML","$f3b06000f9b46fbb$var$createCategoryList","$52650fc44c8b8200$var$scrollUp","window","body","scrollTop","documentElement","style","display","scrollTo","top","behavior","$e27edc6dc33d0133$exports","URL","resolve","import","meta","url","toString","$c0cb484ed29a65f5$var$modeSwitch","$c0cb484ed29a65f5$var$body","$c0cb484ed29a65f5$var$logoIcon","$c0cb484ed29a65f5$var$savedMode","localStorage","getItem","checked","setAttribute","$parcel$interopDefault","selectedMode","this","setItem"],"version":3,"file":"index.0e5a7a7d.js.map"}