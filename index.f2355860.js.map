{"mappings":"qhBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sJCAzDH,EAAA,S,WCAA,IAAAI,EAAAJ,EAAA,S,aAIA,MAAMK,EAAcC,SAASC,cAAc,gBACrCC,EAAWF,SAASC,cAAc,iBAClCE,EAAYH,SAASC,cAAc,kBACnCG,EAAaJ,SAASC,cAAc,sBACpCI,EAAWL,SAASC,cAAc,mBAClCK,EAAkBN,SAASC,cAAc,eAE/CF,EAAYQ,iBAAiB,SAE7B,SAAiBC,GACf,MAAMC,EAAeD,EAAIE,OAAOC,UAChCC,QAAQC,IAAIJ,GAEZK,EAAAC,QACGC,IACC,+DAA+DP,KAEhEQ,MAAK,SAAUC,GACDA,EAASC,KAAKC,KACzB,EAACC,IAAEA,EAAGC,WAAEA,EAAUC,MAAEA,EAAKC,OAAEA,EAAMC,UAAEA,KAAgBb,QAAQC,IAAIK,KAEjEhB,EAASwB,UAA2BR,EAASC,KAc9CC,KACC,EAACC,IACCA,EAAGC,WACHA,EAAUC,MACVA,EAAKC,OACLA,KACI,gDAAgDH,gGAEtCC,sKAGwBC,2HAGEC,gGAM3CG,KAAK,G,IAhCLC,OAAM,SAAUC,GACfjB,QAAQC,IAAIgB,E,IAGhBzB,EAAW0B,UAAUC,OAAO,qBAC5B1B,EAASyB,UAAUE,IAAI,qBACvB7B,EAAU8B,YAAcxB,EACxBH,EAAgB4B,MAAMC,QAAU,M,IA4BPC,WACzB,IACE,MAAMC,QAAuB,EAAAvC,EAAAwC,qBAC7BD,EAAeE,MAAK,CAACC,EAAGC,IAAMD,EAAEf,UAAUiB,cAAcD,EAAEhB,aAE1D,MAAMkB,EAAwBN,EAC3BjB,KACCwB,GACE,uFAEIA,EAASnB,kDAIhBE,KAAK,IACR5B,EAAY8C,mBAAmB,YAAaF,E,CAC5C,MAAOd,GACPjB,QAAQC,IAAIgB,E,GAGhBiB,G,WClFA,MAAMC,EAAW/C,SAASC,cAAc,cAExC+C,OAAOzC,iBAAiB,UAUxB,WAEIP,SAASiD,KAAKC,UAAY,KAC1BlD,SAASmD,gBAAgBD,UAAY,IAErCH,EAASb,MAAMC,QAAU,QAEzBY,EAASb,MAAMC,QAAU,M,IAhB7BY,EAASxC,iBAAiB,SAE1B,WACEyC,OAAOI,SAAS,CACdC,IAAK,EACLC,SAAU,U,2CCRdC,EAAiB,IAAAC,IAAoB9D,EAAA,SAAA+D,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCG5F,MAAMC,EAAa9D,SAASC,cAAc,gBACpC8D,EAAO/D,SAASC,cAAc,QAC9B+D,EAAWhE,SAASC,cAAc,0BAElCgE,EAAYC,aAAaC,QAAQ,gBACnCF,GACAF,EAAKjC,UAAYmC,EACjBH,EAAWM,QAAwB,SAAdH,EACH,SAAdA,GACAD,EAASK,aAAa,OAAQ,GAAGC,EAAAf,sBAGrCQ,EAAKjC,UAAY,QAGrBgC,EAAWvD,iBAAiB,UAAU,WAClC,MAAMgE,EAAeC,KAAKJ,QAAU,OAAS,QAC7CL,EAAKjC,UAAYyC,EAEI,SAAjBA,EACAP,EAASK,aAAa,OAAQ,GAAGC,EAAAf,qBAEjCS,EAASK,aAAa,OAAQ,GAAGC,EAAAf,sBAGrCW,aAAaO,QAAQ,eAAgBF,E","sources":["node_modules/@parcel/runtime-js/lib/runtime-cfe03fb8d169a90e.js","src/index.js","src/js/categories.js","src/js/scroll-up.js","node_modules/@parcel/runtime-js/lib/runtime-44e7bd74d9a8b620.js","src/js/switch-theme.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.f2355860.js\\\",\\\"8OQ7p\\\":\\\"icons.25e2aaaf.svg\\\",\\\"a8cj2\\\":\\\"shopping-list.1a5c3a12.js\\\"}\"));","import './js/header'\nimport './js/home-page'\nimport './js/categories'\nimport './js/donate-bar'\nimport './js/scroll-up'\nimport './js/modal'\nimport './js/fond-items'\nimport './js/request'\nimport './js/switch-theme'\n\n","import { getCategoriesList } from './request';\nimport axios from 'axios';\n// import { getBooksCategory } from \"./request\";\n\nconst listElement = document.querySelector('.cat-list-js');\nconst bookList = document.querySelector('.book-list-js');\nconst bookTitle = document.querySelector('.book-title-js');\nconst bestButton = document.querySelector('.category__linkAll');\nconst listItem = document.querySelector('.category__link');\nconst bestBooksHidden = document.querySelector('.best-books');\n\nlistElement.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  const categoryName = evt.target.outerText;\n  console.log(categoryName);\n\n  axios\n    .get(\n      `https://books-backend.p.goit.global/books/category?category=${categoryName}`\n    )\n    .then(function (response) {\n      const book = response.data.map(\n        ({ _id, book_image, title, author, list_name }) => console.log(response)\n      );\n      bookList.innerHTML = createBookList(response.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  bestButton.classList.remove('category-selected');\n  listItem.classList.add('category-selected');\n  bookTitle.textContent = categoryName;\n  bestBooksHidden.style.display = 'none';\n}\n\nfunction createBookList(arr) {\n  return arr\n    .map(\n      ({\n        _id,\n        book_image,\n        title,\n        author,\n      }) => `<li class=\"category-book-item\" data-book-id=\"${_id}\">\n       <button class=\"category__link\" type='button' data-category>\n          <img src=\"${book_image}\" alt=\"book\" class=\"category-book-img\">\n            <div class=\"textbox\">\n                <div class=\"titlebox\">  \n                  <p class=\"titlebox-title\">${title}</p>\n                </div>\n                <div class=\"authorbox\">  \n                  <p class=\"authorbox-author\">${author}</p>\n                </div>\n            </div>          \n        </button>\n      </li>`\n    )\n    .join('');\n}\n\nconst createCategoryList = async () => {\n  try {\n    const categoriesList = await getCategoriesList();\n    categoriesList.sort((a, b) => a.list_name.localeCompare(b.list_name));\n\n    const buttonsCategoriesList = categoriesList\n      .map(\n        category =>\n          `<li class=\"category__item\">\n          <button class=\"category__link\">\n            ${category.list_name}\n          </button>\n        </li>`\n      )\n      .join('');\n    listElement.insertAdjacentHTML('beforeend', buttonsCategoriesList);\n  } catch (error) {\n    console.log(error);\n  }\n};\ncreateCategoryList();\n","const scrollUp = document.querySelector('.scroll-up');\n\nwindow.addEventListener('scroll', onScrollWheel);\nscrollUp.addEventListener('click', onScrollClick);\n\nfunction onScrollClick() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onScrollWheel() {\n  if (\n    document.body.scrollTop > 500 ||\n    document.documentElement.scrollTop > 500\n  ) {\n    scrollUp.style.display = 'block';\n  } else {\n    scrollUp.style.display = 'none';\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8OQ7p\")).toString();","// Igor\nimport spritePath from '../images/icons.svg';\n\nconst modeSwitch = document.querySelector('.mode-switch');\nconst body = document.querySelector('body');\nconst logoIcon = document.querySelector('.header__logo-icon use');\n\nconst savedMode = localStorage.getItem('selectedMode');\nif (savedMode) {\n    body.classList = savedMode;\n    modeSwitch.checked = savedMode === 'dark' ? true : false;\n    if (savedMode === 'dark') {\n        logoIcon.setAttribute('href', `${spritePath}#icon-logo-dark`);\n    }\n} else {\n    body.classList = 'light';\n}\n\nmodeSwitch.addEventListener('change', function() {\n    const selectedMode = this.checked ? 'dark' : 'light';\n    body.classList = selectedMode;\n\n    if (selectedMode === 'dark') {\n        logoIcon.setAttribute('href', `${spritePath}#icon-logo-dark`);\n    } else {\n        logoIcon.setAttribute('href', `${spritePath}#icon-logo-light`);\n    }\n\n    localStorage.setItem('selectedMode', selectedMode);\n});"],"names":["parcelRequire","register","JSON","parse","$e5MbR","$f3b06000f9b46fbb$var$listElement","document","querySelector","$f3b06000f9b46fbb$var$bookList","$f3b06000f9b46fbb$var$bookTitle","$f3b06000f9b46fbb$var$bestButton","$f3b06000f9b46fbb$var$listItem","$f3b06000f9b46fbb$var$bestBooksHidden","addEventListener","evt","categoryName","target","outerText","console","log","$2shzp","default","get","then","response","data","map","_id","book_image","title","author","list_name","innerHTML","join","catch","error","classList","remove","add","textContent","style","display","async","categoriesList","getCategoriesList","sort","a","b","localeCompare","buttonsCategoriesList","category","insertAdjacentHTML","$f3b06000f9b46fbb$var$createCategoryList","$52650fc44c8b8200$var$scrollUp","window","body","scrollTop","documentElement","scrollTo","top","behavior","$e27edc6dc33d0133$exports","URL","resolve","import","meta","url","toString","$c0cb484ed29a65f5$var$modeSwitch","$c0cb484ed29a65f5$var$body","$c0cb484ed29a65f5$var$logoIcon","$c0cb484ed29a65f5$var$savedMode","localStorage","getItem","checked","setAttribute","$parcel$interopDefault","selectedMode","this","setItem"],"version":3,"file":"index.f2355860.js.map"}